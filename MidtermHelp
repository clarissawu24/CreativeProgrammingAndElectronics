//sound detection initializers 
import ddf.minim.*;
import processing.sound.*;
Minim minim;
AudioInput in;
Amplitude loudness;

//shape initializers 
float angleInDegrees = 1;
int counter = 8;
Oscil[] oscil = new Oscil[counter];

void setup() {
  size(600, 400, P3D);
  background(149, 202, 255);
  minim = new Minim(this);
  in = minim.getLineIn();
  for (int i = 0; i < oscil.length; i++) { 
    oscil[i] = new Oscil();

    loudness = new Amplitude(this);
    loudness.input(new AudioIn(this, 0));
  }
}

void draw() { 

  background(149, 202, 255);

  //adjusting ring diameter based on volume loudness: louder = wider circles
  pushMatrix();
  float volume = loudness.analyze();
  int size = int(map(volume, 0, 0.5, 1, 350));
  
  //initial background circle shrinks each frame 
  float shrink = 300; 
  translate(width/2, height/2);
  noFill();
  stroke(255);

  //small ellipse traveling on path
  push();
  fill(255);
  rotateZ(angleInDegrees);
  ellipse(shrink/3, shrink/3, 10, 10);
  angleInDegrees += 0.05;
  pop();

  //big ellipse travelling on path
  push();
  stroke(255, 225, 253);
  noFill();
  rotateZ(-angleInDegrees);
  ellipse(shrink/3, shrink/3, 30, 30);
  ellipse(shrink/3, shrink/3, 25, 25);
  angleInDegrees += 0.01;
  pop();
  
  //background rings order: big -> small
  stroke(255);
  ellipse(0, 0, shrink+(size/10), shrink+(size/10));
  
  stroke(255, 225, 253);
  ellipse(0, 0, (shrink-5)+(size/10), (shrink-5)+(size/10));

  stroke(255);
  ellipse(0, 0, (shrink-10)+(size/10), (shrink-10)+(size/10));

  ellipse(0, 0, (shrink-20)+(size/10), (shrink-20)+(size/10));
  popMatrix();

//drawing the oscillating mallets
  for (int i = 0; i < oscil.length; i++) {
    oscil[i].oscillate();
    oscil[i].display();
  }
}

class Oscil {
  PVector angle; 
  PVector velocity;
  PVector amplitude;

  Oscil() {
    angle = new PVector();
    velocity = new PVector(random(-0.05, 0.05), random(-0.05, 0.05));
    amplitude = new PVector(random(width/2), random(height/2));
  }

  void oscillate() {
    angle.add(velocity);
  }

  void display() {
    float x = sin(angle.x)*amplitude.x;
    float y = sin(angle.y)*amplitude.y;

    pushMatrix();
    translate(width/2, height/2);
    stroke(255);
    fill(149, 202, 255);
    line(0, 0, x, y);
    //ellipse(x,y,16,16);
    //line(0, 0, x, y);

    for (int i = 0; i < in.bufferSize()-1; i++)
    {
      stroke(255-(in.right.get(i)*40), 255-(in.left.get(i)*100), 255);
      ellipse(x, y, 5+(in.right.get(i)*250), 5+(in.left.get(i)*250));
    }

    popMatrix();
  }
}


[Code Credit Link](https://www.youtube.com/watch?v=5ES12wTl48g&list=RD5ES12wTl48g&index=4)
